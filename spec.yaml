openapi: 3.0.1
info:
  title: Documentación Delilah Restó
  description: La presente documentación pertenece al proyecto Delilah Restó, el
    cual consta de una API   dirigida a la gestión de usuarios, pedidos y productos
    de un restaurante. 
    
    > La API  de Delilah Restó esta contruida en base de la arquitectura
    API Rest. Y con esta se busca implementar un sistema CRUD para una sistema de
    gestión de pedidos de un restaurante.
    
    
    > (Para hacer uso de esta API primero
    sera necesario la creación de un Token para obtener todas las peticiones sin restricciones.)
  contact:
    email: wilmarfm156@hotmail.com
  version: 1.0.0
servers:
- url: https://localhost:4000/v1
- url: http://localhost:4000/v1
tags:
- name: usuario
  description: En esta sección se encuentran todos los endpoints que permitiran la
    gestión de los usuarios de la API Delilah Restó.
- name: producto
  description: En esta sección se encuentran todos los endpoints que permitiran la
    gestión de los platos y productos de la API Delilah Restó.
- name: pedido
  description: En esta sección se encuentran todos los endpoints que permitiran la
    gestión de los pedidos de la API Delilah Restó.
paths:
  /user:
    get:
      tags:
      - usuario
      summary: Lista de usuarios.
      description: Retorna un arreglo con todo los usuarios existentes en la base
        de datos.
      parameters:
      - name: token
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        401:
          description: El token es invalido.
        403:
          description: Se requiere un Token para acceder a esta información.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /user/login:
    post:
      tags:
      - usuario
      summary: Login de usuario.
      description: Permite al usuario acceder a la aplicación.
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: El usuario debe estar previamente registrado para acceder a la aplicación.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        200:
          description: Usuario logueado exitosamente.
        400:
          description: La información recibida es invalida.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /user/register:
    post:
      tags:
      - usuario
      summary: Registro de usuario.
      description: Permite registrar un usuario nuevo a la aplicación.
      requestBody:
        required: true
        description: Estructura del objeto usuario.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        200:
          description: Usuario registrado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          description: La información recibida es invalida o hace falta información necesaria.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /user/{id}:
    get:
      tags:
        - usuario
      summary: Obtener usuario por Id.
      description: Obtiene un usuario por su Id, el usuario debe estar previamente registrado para que se pueda acceder a este.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/user'
        400:
          description: El id ingresado en invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para acceder a esta información.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    put:
      tags:
        - usuario
      summary: Actualizar un usuario por Id.
      description: Permite modificar la información de un usuario en particular llamando a este por su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Estructura del body con los datos del usuario actualizado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        200:
          description: Usuario actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    delete:
      tags:
        - usuario
      summary: Eliminar usuario por Id.
      description: Permite eliminar un usuario buscandolo por su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: Usuario eliminado exitosamente.
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /product:
    get:
      tags:
      - producto
      summary: Lista de productos.
      description: Retorna un arreglo con todo los productos existentes en la base
        de datos.
      parameters:
      - name: token
        in: header
        description: El token debe ir en el encabezado.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        401:
          description: El token es invalido.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /product/new:
    post:
      tags:
      - producto
      summary: Crear un nuevo producto.
      description: Permite crear un nuevo objeto producto.
      parameters:
        - name: token
          in: header
          description: Es necesario tener permisos de administrador para crear un nuevo producto.
          required: true
          schema:
            type: string
      requestBody:
        description: Estructura del objeto producto.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new'
      responses:
        200:
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: La información recibida es invalida.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /product/{category}:
    get:
      tags:
      - producto
      summary: Obtener producto por su categoria.
      description: Permite traer todos los productos según su categoria. La categoria es definida al momento de crear el producto, para ello es recomendable usar un formato estandar para definir estas categorias.
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        400:
          description: La información recibida es invalida o hace falta información necesaria.
        401:
          description: El token es invalido.
        404:
          description: La categoria solicitada no ha sido encontrada.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /product/{search}:
    get:
      tags:
        - producto
      summary: Obtener producto por su nombre.
      description: Permite traer todos los productos según por su nombre. Los nombres son definidos al momento de crear cada uno de los productos.
      parameters:
        - name: search
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        400:
          description: La información recibida es invalida o hace falta información necesaria.
        401:
          description: El token es invalido.
        404:
          description: El producto solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /product/{id}:
    get:
      tags:
        - producto
      summary: Obtener producto por su Id.
      description: Permite obtener un producto en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        404:
          description: El producto solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    put:
      tags:
        - producto
      summary: Actualizar producto por su Id.
      description: Permite actualizar un producto en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para modificar un producto.
          schema:
            type: string
      requestBody:
        required: true
        description: Estructura del body con los datos del producto actualizado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new'
      responses:
        200:
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El producto solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    delete:
      tags:
        - producto
      summary: Eliminar producto por su Id.
      description: Permite eliminar un producto en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para eliminar un producto.
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado exitosamente.
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /order:
    get:
      tags:
      - pedido
      summary: Lista de pedidos.
      description: Retorna un arreglo con todo los pedidos existentes en la base
        de datos.
      parameters:
      - name: token
        in: header
        description: Es necesario tener permisos de administrador para ver la lista de pedidos.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order'
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: No se han encontrado pedidos.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /order/new:
    post:
      tags:
      - pedido
      summary: Crea un nuevo pedido.
      description: Permite crear un nuevo pedido por parte del usuario o del administrador.
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: Estructura del objeto pedido.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_order'
      responses:
        200:
          description: Pedido creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        400:
          description: La información recibida es invalida.
        401:
          description: El token es invalido.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /order/{status}:
    get:
      tags:
      - pedido
      summary: Obtener pedido por su estado.
      description: Permite traer todos los pedidos según su estado actual. El estado solo puede ser modificado por el administrador, por defecto será "new".
      parameters:
        - name: status
          in: path
          required: true
          description: Listado de status para buscar.
          style: simple
          schema:
              type: string
              default: new
              enum:
                - new
                - confirmed
                - preparing
                - sending
                - delivered
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para realizar esta acción.
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order'
        400:
          description: La información recibida es invalida o hace falta información necesaria.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El estatus solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /user/{user_id}/order:
    get:
      tags:
        - pedido
      summary: Obtener lista de pedidos de un usuario por su Id.
      description: Permite traer todos los pedidos de un usuario especifico buscando a este por medio de su Id. Los id se asignan automaticamente al crearse un nuevo usuario.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para acceder a esta información.
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order'
        400:
          description: La información recibida es invalida o hace falta información necesaria.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
  /order/{id}:
    get:
      tags:
        - pedido
      summary: Obtener pedido por su Id.
      description: Permite obtener un pedido en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para realizar esta acción.          
          schema:
            type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El pedido solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    put:
      tags:
        - pedido
      summary: Actualizar pedido por su Id.
      description: Permite actualizar un pedido en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para modificar un pedido.
          schema:
            type: string
      requestBody:
        required: true
        description: Estructura del body con los datos del pedido actualizado.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/admin_order'
      responses:
        200:
          description: Pedido actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El pedido solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
    delete:
      tags:
        - pedido
      summary: Eliminar pedido por su Id.
      description: Permite eliminar un pedido en particular buscando a este por medio de su Id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: token
          in: header
          required: true
          description: Es necesario tener permisos de administrador para eliminar un pedido. El usuario unicamente podra solicitar una cancelación del pedido al administrador en caso de que desee cancelar su orden.
          schema:
            type: string
      responses:
        200:
          description: Pedido eliminado exitosamente.
        400:
          description: El id ingresado es invalido.
        401:
          description: El token es invalido.
        403:
          description: Se requiere permisos de administrador para realizar esta acción.
        404:
          description: El usuario solicitado no ha sido encontrado.
        500:
          description: Ha ocurrido un problema con el servidor.
        503:
          description: El servidor actualmente se encuentra en mantenimiento o no esta funcionando correctamente.
        504:
          description: El servidor se ha tardado en responder.
        
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        created:
          type: string
          format: date
        last_update:
          type: string
          format: date
        is_admin:
          type: boolean
          default: false
    login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
    register:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        password:
          type: string
          format: password
        is_admin:
          type: boolean
      required:
        - name
        - last_name
        - email
        - phone
        - address
        - password
        - is_admin
    product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        price:
          type: integer
        category:
          type: string
        available:
          type: boolean
          default: true
        created:
          type: string
          format: date
        last_update:
          type: string
          format: date
    new:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        price:
          type: integer
        category:
          type: string
        available:
          type: boolean
    order:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          default: new
        product:
          type: array
          items:
            $ref: '#/components/schemas/product'
        user:
          $ref: '#/components/schemas/user'
        total:
          type: integer
        send_to:
          type: string
        payment_type:
          type: string
        created:
          type: string
          format: date
        last_update:
          type: string
          format: date
    new_order:
      type: object
      properties:
        product:
          type: array
          items:
            type: integer
        user:
          type: integer
        send_to:
          type: string
        payment_type:
          type: string
      required:
        - product
        - user
        - payment_type
    admin_order:
      type: object
      properties:
        status:
          type: string
          default: new
        total:
          type: integer
      required:
        - status